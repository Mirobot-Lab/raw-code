import pyrealsense2 as rs
import numpy as np
import cv2

# === Step 1: Check RealSense connection ===
ctx = rs.context()
if len(ctx.devices) == 0:
    raise RuntimeError("‚ùå No RealSense device connected.")
device = ctx.devices[0]
print("‚úÖ RealSense connected:", device.get_info(rs.camera_info.name))

# === Step 2: Start RealSense streams ===
pipeline = rs.pipeline()
config = rs.config()

# Enable RGB and depth stream
config.enable_stream(rs.stream.color, 640, 480, rs.format.bgr8, 30)
config.enable_stream(rs.stream.depth, 640, 480, rs.format.z16, 30)

print("üé• Starting camera...")
pipeline.start(config)

try:
    while True:
        # Get frames
        frames = pipeline.wait_for_frames()
        color_frame = frames.get_color_frame()
        depth_frame = frames.get_depth_frame()

        if not color_frame or not depth_frame:
            continue

        # Convert to numpy
        color_image = np.asanyarray(color_frame.get_data())
        depth_image = np.asanyarray(depth_frame.get_data())

        # Normalize depth for display
        depth_colormap = cv2.applyColorMap(
            cv2.convertScaleAbs(depth_image, alpha=0.03),
            cv2.COLORMAP_JET
        )

        # Show both streams side by side
        images = np.hstack((color_image, depth_colormap))
        cv2.imshow("RealSense RGB + Depth", images)

        key = cv2.waitKey(1)
        if key & 0xFF == ord('q'):
            print("üëã Exiting...")
            break

finally:
    pipeline.stop()
    cv2.destroyAllWindows()
    print("üõë Camera stopped.")
